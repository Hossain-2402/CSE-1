							Lab-1
							-----

compilor : 
	converts the code into 0's and 1's
stdio : 
	standard input output library
return 12 : 
	in the compilor it says process returned 12. It is just an indecaor that the code has run properly and has returned what I wanted it to be 
printf("Something\n"):
	"\n" makes a line break
printf("Something\t"):
	"\t" makes a 4 space or a tab
printf("Hello World\""):
	prints : Hello World"
printf("Hello World\\"):
	prints : Hello World \
int :
	int takes a 8 byte space 	
	if I put a huge number which is not possible to store in INT varuable, it will show a garbage value that is not same as what I initialized.
scanf: 
	The following code is not valid : scanf("%d\n",&a); here, the '\n' is not allowed.
comments:
	// is used to make a comment 
google classroom code :
	tvkwiy2
OBE:
	outcome based education 
marks distb:
	attandence : 20
	assingment/online/offline: 40
	mid/final: 40

-------------------------------------------------------------------------------------------------------------
					
					Lab-2
					-----

# "%.2f": This prints only 2 decimal value after . [ Example : 10.123456 becomes 10.12 ]
# scanf(" %f%f",&a,&b) : Here, if we make a gap between %f's, compiler consides the gap as an input [ Not mandatory ]
# float takes the same amout of space as integer in the memory.
# double takes the double amount of space that float takes in memory.
# double -> %lf

# char character -> makes a character variable

# scanf(" %c,&char) -> Here we need to put a space after the first coatation to have it run perfectly [For character]
# scanf(" %s,&string) -> Here we need to put a space after the first coatation to have it run perfectly [For string]

# float c = (float) a/b; -> This is called type casting

# % operator prints the remainer of a division operation
    5%2 -> 1
    here 2 is quotient
    and 1 is remainder 


-------------------------------------------------------------------------------------------------------------
					
					Lab-3
					-----



